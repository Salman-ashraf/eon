/**
 * This code was generated by Builder.io.
 */
import React from "react";
import {
  Box,
  InputLabel,
  OutlinedInput,
  InputAdornment,
  IconButton,
} from "@mui/material";
import { styled } from "@mui/system";
import Visibility from "@mui/icons-material/Visibility";
import VisibilityOff from "@mui/icons-material/VisibilityOff";

interface InputFieldProps {
  label: string;
  value: string;
  type: "text" | "password";
}

const InputWrapper = styled(Box)({
  display: "flex",
  width: "100%",
  flexDirection: "column",
  fontWeight: 400,
  whiteSpace: "nowrap",
  justifyContent: "start",
  marginBottom: "16px",
});

const StyledInputLabel = styled(InputLabel)({
  color: "#b6bec3",
  fontSize: "12px",
  marginBottom: "4px",
});

const StyledOutlinedInput = styled(OutlinedInput)(({ theme }) => ({
  borderRadius: "8px",
  backgroundColor: "#fff",
  "& .MuiOutlinedInput-notchedOutline": {
    borderColor: "#e3e6e8",
  },
  "&:hover .MuiOutlinedInput-notchedOutline": {
    borderColor: "#b6bec3",
  },
  "&.Mui-focused .MuiOutlinedInput-notchedOutline": {
    borderColor: "#5c86d7",
  },
  "& input": {
    padding: "8px 16px",
    fontSize: "14px",
    color: "#111922",
    lineHeight: "22px",
  },
  [theme.breakpoints.down("md")]: {
    maxWidth: "100%",
    whiteSpace: "initial",
  },
}));

const InputField: React.FC<InputFieldProps> = ({ label, value, type }) => {
  const [showPassword, setShowPassword] = React.useState(false);

  const handleClickShowPassword = () => setShowPassword((show) => !show);

  const handleMouseDownPassword = (
    event: React.MouseEvent<HTMLButtonElement>
  ) => {
    event.preventDefault();
  };

  return (
    <InputWrapper>
      <StyledInputLabel htmlFor={`input-${label}`}>{label}</StyledInputLabel>
      <StyledOutlinedInput
        id={`input-${label}`}
        type={type === "password" && !showPassword ? "password" : "text"}
        value={value}
        readOnly
        endAdornment={
          type === "password" ? (
            <InputAdornment position="end">
              <IconButton
                aria-label="toggle password visibility"
                onClick={handleClickShowPassword}
                onMouseDown={handleMouseDownPassword}
                edge="end"
              >
                {showPassword ? <VisibilityOff /> : <Visibility />}
              </IconButton>
            </InputAdornment>
          ) : null
        }
      />
    </InputWrapper>
  );
};

export default InputField;
