/**
 * This code was generated by Builder.io.
 */
import React from 'react';
import styled from 'styled-components';
import { TextField, Button } from '@material-ui/core';
import { useForm, Controller } from 'react-hook-form';
import RobotAiIcon from '@src/components/SVGIcons/RobotAiIcon';
import CloseIcon from '@src/components/SVGIcons/CloseIcon';
import CheckCircleIcon from '@src/components/SVGIcons/CheckCircleIcon';
import SendIcon from '@src/components/SVGIcons/SendIcon';
import ChatHeader from './ChatHeader';
import ChatMessage from './ChatMessage';
import DealSummary from './DealSummary';

interface AiChatComponentProps {
  onClose: () => void;
}

const AiChatComponent: React.FC<AiChatComponentProps> = ({ onClose }) => {
  const { control, handleSubmit } = useForm();

  const onSubmit = (data: { message: string }) => {
    console.log(data);
  };

  return (
    <ChatContainer>
      <ChatHeader onClose={onClose} />
      <ChatBody>
        <ChatMessage
          text="Welcome! Let me assist you with this deal so you can maximize your earnings."
          time="10:00 am"
          isAi
        />
        <DealSummary />
      </ChatBody>
      <ChatFooter>
        <form onSubmit={handleSubmit(onSubmit)}>
          <Controller
            name="message"
            control={control}
            defaultValue=""
            render={({ field }) => (
              <StyledTextField
                {...field}
                fullWidth
                variant="outlined"
                placeholder="Type your message here..."
                InputProps={{
                  endAdornment: (
                    <SendButton type="submit">
                      <SendIcon />
                    </SendButton>
                  ),
                }}
              />
            )}
          />
        </form>
      </ChatFooter>
    </ChatContainer>
  );
};

const ChatContainer = styled.section`
  border-radius: 24px;
  background: #1b2735;
  box-shadow: 0 6px 24px 0 rgba(0, 0, 0, 0.8);
  display: flex;
  max-width: 296px;
  flex-direction: column;
  overflow: hidden;
`;

const ChatBody = styled.main`
  display: flex;
  flex-direction: column;
  padding: 16px;
  flex: 1;
  overflow-y: auto;
`;

const ChatFooter = styled.footer`
  padding: 16px;
`;

const StyledTextField = styled(TextField)`
  .MuiOutlinedInput-root {
    background-color: #eff4fc;
    border-radius: 16px;
  }
`;

const SendButton = styled(Button)`
  padding: 8px;
  min-width: unset;
`;

export default AiChatComponent;